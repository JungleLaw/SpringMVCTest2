<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--<?xml version="1.0" encoding="UTF-8"?>
    <beans xmlns="http://www.springframework.org/schema/beans"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    </beans>-->
    <!--此文件负责整个mvc中的配置-->

    <!--启用spring的一些annotation -->
    <context:annotation-config/>

    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
    <mvc:annotation-driven/>

    <!--静态资源映射-->
    <!--本项目把静态资源放在了webapp的statics目录下，资源映射如下-->
    <mvc:resources mapping="/css/**" location="/WEB-INF/statics/css/"/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/statics/js/"/>
    <mvc:resources mapping="/image/**" location="/WEB-INF/statics/image/"/>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">

                </bean>
            </list>
        </property>
    </bean>
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsps/"/><!--设置JSP文件的目录位置-->
        <property name="suffix" value=".jsp"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>
    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        &lt;!&ndash; 设置为true以忽略对Accept Header的支持&ndash;&gt; 
        <property name="ignoreAcceptHeader" value="true"/>
             &lt;!&ndash; true，开启扩展名支持，false关闭支持 &ndash;&gt;    
        <property name="favorPathExtension" value="false"/>
           &lt;!&ndash; 用于开启 /userinfo/123?format=json的支持 &ndash;&gt;   
        <property name="favorParameter" value="true"/>
            &lt;!&ndash;  在没有扩展名和参数时即: "/user/1" 时的默认展现形式     &ndash;&gt;  
        <property name="defaultContentType" value="text/html"/>
             &lt;!&ndash; 参数值至mimeType的映射,即 /rest?format=json json是key，
        application/json就是value          暂时只支持json和xml      &ndash;&gt; 
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
            </map>
        </property>
         
        <property name="viewResolvers">
              &lt;!&ndash; 关闭所有的解析器，防止它在查找候选视图时多个解析器都运行 &ndash;&gt;     
            <list>
                <bean>

                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                    <property name="objectMapper">
                        <bean>

                        </bean>
                    </property>
                </bean>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <property name="marshaller">
                        <bean>

                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>-->

    <!-- 自动扫描装配 -->
    <context:component-scan base-package="cn.law.springmvc.demo.controller"/>
</beans>